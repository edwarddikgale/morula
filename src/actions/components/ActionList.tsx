import React, { useState } from 'react';
import { Button, Spinner } from 'react-bootstrap';
import { IonIcon } from '@ionic/react';
import { addCircleOutline, addCircleSharp, bookmarkSharp, pencil } from 'ionicons/icons';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faLightbulb, faLeaf, faFileCircleQuestion } from '@fortawesome/free-solid-svg-icons';
import { Tooltip } from 'react-tooltip';
import { Action } from '../types/Action';
import DeleteConfirmation from '../../common/components/ui/DeleteConfirmation';
import LimitedCharacters from '../../common/components/ui/LimitedCharacters';
import './styles/action-list.css';
import RoundNumber from 'common/components/ui/RoundNumber';

interface ActionListProps {
  data: Action[];
  onDeleteItem: (index: number) => void;
  onEditItem: (index: number, action: Action) => void;
  onCreateItem: (index: number, action: Action) => void;
  key: number;
}

const ActionList = ({ data, onDeleteItem, onEditItem, onCreateItem }: ActionListProps) => {
  const [isCreateLoading, setIsCreateLoading] = useState<boolean>(false);

  const handleCreate = (index: number, action: Action) => {
    setIsCreateLoading(true);
    onCreateItem(index, action);
    setTimeout(() => setIsCreateLoading(false), 1200);
  }

  return (
    <div className="mx-2 my-2">
      <Tooltip id="action-list-tips" />
      <div className="my-3">
        {data.map((item, index) => (
          <div key={index} className='custom-list-group-item mb-3 p-3 border rounded'>
            <div className="row">
              <div className="col-md-1 col-lg-1 d-flex flex-column align-items-start justify-content-between" style={{ position: 'relative' }}>
                
                <RoundNumber text={`${index + 1}`} />
                <div className="row">
                  <div className="col-6">
                    {item.id && (
                      <p><IonIcon icon={bookmarkSharp} /></p>
                    )}
                    {item.piResource && (
                      <p
                        data-tooltip-effect="solid"
                        data-tooltip-place="top"
                        data-tooltip-id="action-list-tips" 
                        data-tooltip-content="This action has support material associated with it, click on customise to view links to the materials"
                      >
                        <FontAwesomeIcon icon={faFileCircleQuestion} color="green" />
                      </p>
                    )}
                    {item.source === "ai" && (
                      <p title="This action is generated by our AI model">
                        <FontAwesomeIcon icon={faLightbulb} color="orange" />
                      </p>
                    )}
                    {(item.source !== "ai" && !item.piResource) && (
                      <p title="This action is recommended by positive impact">
                        <FontAwesomeIcon icon={faLeaf} color="green" />
                      </p>
                    )}
                  </div>
                  <div className="col-6">
                    <p className='action-sdg'>SDG-{item.sdg}</p>
                  </div>    
                </div>   
              </div>
              <div className="col-md-8 col-lg-8">
                <h6 className="bold-heading">{item.title}</h6>
                <LimitedCharacters text={item.description} limit={200} />
              </div>
              <div className="col-md-3 col-lg-3">
                <div className='row'>
                  <div className='col-10 d-flex offset-2 justify-content-between mb-2'>
                    {!item.id && 
                      <div 
                      className="custom-button"
                      onClick={() => handleCreate(index, item)}
                      title="Add to my list"
                    >
                      <IonIcon icon={addCircleOutline} className="custom-button-icon" />
                      <span className='small'>Keep</span>
                      {isCreateLoading &&
                        <Spinner animation="border" variant="light" size="sm" className="custom-spinner" />
                      } 
                    </div>
                    }  
                    {item.id && 
                      <div 
                        className="custom-button-disabled" 
                        title="Already in list"
                      >
                        <IonIcon icon={addCircleSharp} className="custom-button-icon" /> 
                        <span className='small'>Keep</span>
                      </div>
                    }
                    
                    <div 
                      className="custom-button"
                      onClick={() => onEditItem(index, item)}
                      title="Tailor To My Event"
                    >
                      <IonIcon icon={pencil} className="custom-button-icon" />
                      <span className='small'>Customise</span>
                    </div>
                    
                    <DeleteConfirmation 
                      index={index}
                      item={item}
                      label={'Remove'}
                      buttonIsCustom={true}
                      onDelete={() => onDeleteItem(index)}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>         
    </div>
  );
};

export default ActionList;
